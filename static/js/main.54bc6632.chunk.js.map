{"version":3,"sources":["App.js","index.js"],"names":["Todo","todo","index","removeTodo","className","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","todos","setTodo","newTodo","splice","text","newTodos","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGA,SAASA,EAAT,GACC,IADeC,EAChB,EADgBA,KAAMC,EACtB,EADsBA,MAAOC,EAC7B,EAD6BA,WAE3B,OACE,yBAAKC,UAAU,mCACb,yBAAKA,UAAU,yBAAyBH,GACxC,4BAAQG,UAAU,8CAA8CC,QAAS,kBAAMF,EAAWD,KAA1F,MAKN,SAASI,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAAU,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAW3B,OACE,0BAAMN,UAAU,8BAA8BO,SAThD,SAAsBC,GAEpBA,EAAEC,iBACEJ,IAEJF,EAAQE,GACRC,EAAS,OAIP,2BAAON,UAAU,kBAAkBU,KAAK,OAAOC,YAAY,aAAaN,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,WAiC9GS,MA7Bf,WAAgB,IAAD,EACYV,mBAAS,IADrB,mBACNW,EADM,KACCC,EADD,KAUb,SAASjB,EAAWD,GAElB,IAAMmB,EAAO,YAAOF,GACpBE,EAAQC,OAAOpB,EAAM,GACrBkB,EAAQC,GAEV,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,OAAd,QACA,kBAACE,EAAD,CAAUC,QAhBhB,SAAiBgB,GAEf,IAAMC,EAAQ,sBAAOL,GAAP,CAAcI,IAC5BH,EAAQI,MAcDL,EAAMM,KAAI,SAACxB,EAAMC,GAAP,OACT,kBAACF,EAAD,CAAM0B,IAAKxB,EAAOA,MAAOA,EAAOD,KAAMA,EAAME,WAAYA,U,MC9CpEwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.54bc6632.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction Todo({ todo, index, removeTodo })\n{\n  return(\n    <div className=\"todo row justify-content-around\">\n      <div className=\"col align-self-center\">{todo}</div>\n      <button className=\"col-1 align-self-center btn btn-dark remove\" onClick={() => removeTodo(index)}>-</button>\n    </div>\n  )\n}\n\nfunction TodoForm({addTodo}) {\n  const [value, setValue] = useState('');\n\n  function handleSubmit(e) \n  {\n    e.preventDefault();\n    if(!value)\n      return;\n    addTodo(value);\n    setValue('')\n  }\n  return(\n    <form className=\"row justify-content-between\" onSubmit={handleSubmit}>\n      <input className=\"todoForm col-12\" type=\"text\" placeholder=\"Add a Todo\" value={value} onChange={e => setValue(e.target.value)} />\n    </form>\n  )\n}\nfunction App() {\n  const [todos, setTodo] = useState([\n  ])\n\n  function addTodo(text)\n  {\n    const newTodos = [...todos, text];\n    setTodo(newTodos);\n  }\n\n  function removeTodo(index)\n  {\n    const newTodo = [...todos];\n    newTodo.splice(index,1);\n    setTodo(newTodo);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"row\">Todo</h1>\n        <TodoForm addTodo={addTodo} />\n          {todos.map((todo, index) => (\n            <Todo key={index} index={index} todo={todo} removeTodo={removeTodo}/>\n        ))}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}